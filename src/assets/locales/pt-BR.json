{
  "title": "Modelagem de Deadlocks",
  "menuGuideLabel" : "Simulção Guiada",
  "menuSandboxLabel" : "Simulação Livre",
  "previousLabel" : "Anterior",
  "backToGuideLabel" : "Voltar à Simulação Guiada",


  "nextLabel" : "Próximo",
  "finishLabel" : "Ir à Simulação Livre",
  "guide": {
    "title": "Simulação Guiada",
    "howToUse" : "Navegue o guia clicando nos botões <strong>próximo</strong> e <strong>anterior</strong>",
    "instruction": {
      "0" : "<strong>A</strong>, <strong>B</strong> e <strong>C</strong> são <em>processos<em>",
      "1" : " <strong>1</strong>, <strong>2</strong> e <strong>3</strong> são <em>recursos<em>",
      "2" : "Setas de um <strong>processo</strong> para um <strong>recurso</strong> são <strong>requisições</strong> de recursos para processos",
      "3" : "Setas de um  <strong>recurso</strong> para um <strong>processo</strong> são <strong>posses</strong> de recursos para processos",
      "4" : "Agora imagine uma situação com <strong>três</strong> <em>processos</em> e <strong>três</strong> <em>recursos</em>",
      "5" : "<strong>A</strong> requisita <strong>1</strong>",
      "6" : "Agora <strong>A</strong> possue <strong>1</strong>",
      "7" : "<strong>B</strong> e <strong>C</strong> requisitam <strong>2</strong> e <strong>3</strong>, respectivamente",
      "8" : "<strong>B</strong> e <strong>C</strong> possuem <strong>2</strong> e <strong>3</strong>, respectivamente",
      "9" : "<strong>A</strong> requisita <strong>2</strong>, perceba que <strong>A</strong> precisa esperar que <strong>B</strong> libere <strong>2</strong> ",
      "10": "<strong>B</strong> requisita <strong>3</strong>, perceba como <strong>A</strong> e <strong>B</strong> precisam esperar por outro processo",
      "11": "<strong>C</strong> requisita <strong>1</strong>, fechando um ciclo. Todos processos nesse ciclo esperam por recursos que estão alocados para outros processos no mesmo ciclo, o que define um <strong>deadlock</strong>",
      "12": "Na requisição de recursos, a <strong>ordem das requisições</strong> é muito importante. Vejamos o que aconteceria no caso anterior se as requisições fossem feitas em outra ordem",
      "13" : "<strong>A</strong> requisita <strong>1</strong>",
      "14" : "Agora <strong>A</strong> possue <strong>1</strong>",
      "15" : "<strong>A</strong> requisita <strong>2</strong> ",
      "16" : "Agora <strong>A</strong> possue <strong>2</strong> ",
      "17" : "<strong>B</strong> requisita <strong>2</strong>, perceba que <strong>B</strong> deve esperar que <strong>A</strong> libere <strong>2</strong> ",
      "18" : "<strong>A</strong> tem todos os recursos que precisa, <strong>A</strong> usa os recursos e os libera",
      "19" : "<strong>B</strong> possue <strong>2</strong>, já que <strong>2</strong> foi liberado por <strong>A</strong>",
      "20" : "<strong>B</strong> requisita <strong>3</strong>",
      "21" : "<strong>B</strong> possue <strong>3</strong>",
      "22" : "<strong>B</strong> tem todos os recursos que precisa, <strong>B</strong> usa os recursos e os libera",
      "23" : "<strong>C</strong> requisita os recursos <strong>3</strong> e <strong>1</strong>",
      "24" : "<strong>C</strong> possue <strong>3</strong>, já que <strong>3</strong> foi liberado por <strong>B</strong>, e <strong>1</strong>, que foi liberado por <strong>A</strong>",
      "25" : "<strong>C</strong> tem todos os recursos que precisa, <strong>C</strong> usa os recursos e os libera",
      "26" : "Percebam que apenas <strong>mudando a ordem de requisições</strong>, o deadlock foi <strong>evitado</strong>."
    }
  },
  "sandbox": {
    "title": "Simulação Livre",
    "howToUse":  "<ul class=\"list-inline text-center\"><li><kbd>Clique Duplo</kbd>: criar processo</li><li><kbd>Ctrl+Clique Duplo</kbd>: criar recurso</li><li><kbd>Arraste Botão Direito</kbd>: fazer ligação</li><li><kbd>Clique Duplo</kbd>: deletar elemento</li></ul>",
    "ok": "<strong>Não</strong> há deadlock",
    "dead": "Há processos em <strong>deadlock</strong>"
  }
}